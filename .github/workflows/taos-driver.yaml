name: taos-driver-build

# set run name for the tags of TDEngine
#run-name:

on:
  workflow_dispatch:
    inputs:
      tdengine-refs:
        description: 'TDEngine Refs to Build'
        required: true
        default: 'main'
      windows:
        description: 'Build for Windows'
        required: true
        default: 'false'
      linux:
        description: 'Build for Linux'
        required: true
        default: 'false'
      macos:
        description: 'Build for macOS'
        required: true
        default: 'false'

jobs:
  linux:
    if: ${{ github.event.inputs.linux == 'true' }}
    strategy:
      matrix:
        include:
          - arch: amd64
            alias: amd64
          - arch: arm64
            alias: aarch64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clone Source of TDEngine
        run: |
          git clone https://github.com/taosdata/TDengine.git \
            --depth 1 \
            -b ${{ github.event.inputs.tdengine-refs }}
      - name: Install Dependencies for Linux
        run: sudo apt-get install -y gcc cmake build-essential git libssl-dev libgflags2.2 libgflags-dev
      - name: Build TDEngine
        run: |
          cd TDengine
          mkdir debug
          cd debug
          cmake .. -DCPUTYPE=${{ matrix.alias }} -DBUILD_TOOLS=false -DBUILD_CONTRIB=true
          make
      - name: Upload Client Library
        uses: actions/upload-artifact@v2
        with:
          name: libtaos.${{ matrix.arch }}.so
          path: TDengine/debug/build/lib/libtaos.so*

  windows:
    if: ${{ github.event.inputs.windows == 'true' }}
    strategy:
      matrix:
        include:
          - arch: amd64
            alias: amd64
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clone Source of TDEngine
        run: |
          git clone https://github.com/taosdata/TDengine.git \
            --depth 1 \
            -b ${{ github.event.inputs.tdengine-refs }}
      - name: Configure Builder for Windows
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.alias }}
      - name: Build TDEngine
        shell: cmd
        run: |
          cd TDengine
          mkdir debug && cd debug
          cmake .. -G "NMake Makefiles"
          NMake
      - name: Upload Client Library
        uses: actions/upload-artifact@v2
        with:
          name: taos.${{ matrix.arch }}.dll
          path: TDengine/debug/build/lib/taos.dll*

  macos:
    if: ${{ github.event.inputs.macos == 'true' }}
    strategy:
      matrix:
        include:
          # - os: macos-13
          #   arch: amd64
          - os: macos-14
            arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Clone Source of TDEngine
        run: |
          git clone https://github.com/taosdata/TDengine.git \
            --depth 1 \
            -b ${{ github.event.inputs.tdengine-refs }}
      - name: Install Dependencies
        run: brew install argp-standalone gflags pkgconfig
      - name: Build TDEngine
        run: |
          cp patch/zlib_CMakeLists.txt TDengine/cmake/zlib_CMakeLists.txt
          cd TDengine
          sed -i ''
          mkdir debug && cd debug
          cmake .. -DBUILD_TOOLS=false -DBUILD_CONTRIB=false
          cmake --build .
      - name: Upload Client Library
        uses: actions/upload-artifact@v2
        with:
          name: libtaos.${{ matrix.arch }}.dylib
          path: TDengine/debug/build/lib/libtaos.dylib*